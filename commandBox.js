const supportsTouch=()=>"ontouchstart"in document.documentElement;let ALLOW_DEMO_TYPE=!1;const config={github:"https://github.com/maxine4j"},cmdBox=document.getElementById("cmd"),cmdLog=document.getElementById("log");if(supportsTouch())cmdBox.style.display="none";else{cmdBox.style.maxWidth=`${cmdBox.maxLength}ch`;const selectEnd=()=>cmdBox.setSelectionRange(cmdBox.value.length,cmdBox.value.length);cmdBox.addEventListener("keydown",selectEnd),cmdBox.addEventListener("keyup",selectEnd),cmdBox.addEventListener("mousedown",(e=>e.preventDefault()));const updateWidth=()=>{cmdBox.style.width=`${cmdBox.value.length}ch`};cmdBox.addEventListener("input",updateWidth),updateWidth();const cout=e=>{const t=document.createElement("pre");t.textContent=(e||"").toString().replace("\t","    "),cmdLog.appendChild(t)},lnout=(e,t,n=!1)=>{const o=document.createElement("a");o.textContent=e,o.href=t,o.download="",o.target="_blank",o.rel="noopener noreferrer",cmdLog.appendChild(o),n&&o.click()},commands={help:{run:e=>{cout("Available commands:");for(const e in commands)cout("\t- "+e);cout("Tip: run multiple commands with `&&` for example `clear && close`")},man:"Displays list of available commands"},man:{run:e=>{e[1]in commands?cout(commands[e[1]].man):cout(`No manual entry for ${e[1]||'""'}`)},man:"Displays the manual page for the given command"},github:{run:e=>lnout(config.github,config.github,!0),man:"Opens my GitHub profile"},reload:{run:e=>location.reload(),man:"Reloads the page"},clear:{run:e=>cmdLog.textContent="",man:"Clear the terminal screen"},close:{run:e=>cmdLog.classList.add("hidden"),man:"Closes the terminal"},js:{run:args=>{try{cout(eval(args.slice(1).join(" ")))}catch(e){cout(e)}},man:"Runs command as javascript"}},runCmd=e=>{cmdLog.classList.remove("hidden");const t=e.split("&&").map((e=>e.split(" ").filter((e=>""!==e))));cout(`$ ${e}`);for(const e of t){if(!(e[0]in commands)){cout(`tsh: ${e[0]}: command not found\n\n`),commands.help.run();break}commands[e[0]].run(e)}cout("\n")};window.addEventListener("keydown",(e=>{"ArrowUp"===e.key||"ArrowDown"===e.key||" "===e.key||"Tab"===e.key||"Control"===e.key||"Shift"===e.key||"Alt"===e.key||"Meta"===e.key||"c"===e.key&&e.ctrlKey||"a"===e.key&&e.ctrlKey||(cmdBox.focus(),ALLOW_DEMO_TYPE&&(cmdBox.value=""),ALLOW_DEMO_TYPE=!1,"Enter"===e.key&&(runCmd(cmdBox.value),cmdBox.value="",e.preventDefault(),updateWidth()))}));const demoType=(e,t=50,n=!0,o=20,d=1e3)=>(ALLOW_DEMO_TYPE=!0,new Promise((a=>{for(let c=0;c<e.length;c++)setTimeout((()=>{ALLOW_DEMO_TYPE&&(cmdBox.value+=e[c],updateWidth())}),t*c),n&&setTimeout((()=>{ALLOW_DEMO_TYPE&&(cmdBox.value=cmdBox.value.slice(0,cmdBox.value.length-1),updateWidth(),c>=e.length-1&&a())}),o*c+e.length*t+d)})));window.addEventListener("load",(e=>{setTimeout((async()=>{await demoType("hello world"),await demoType("try typing a command"),await demoType("github",30,!0,15,300),await demoType('js demoType("hello")',15,!0,10,300),await demoType("help",30,!0,15,1e3)}),1e3)}))}document.addEventListener("gesturestart",(e=>e.preventDefault())),document.addEventListener("gestureend",(e=>e.preventDefault())),document.addEventListener("gesturechange",(e=>e.preventDefault()));